// Copyright 2021 Harness Inc. All rights reserved.
// Use of this source code is governed by the PolyForm Shield 1.0.0 license
// that can be found in the licenses directory at the root of this repository, also available at
// https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.

syntax = "proto3";

package io.harness.polling.contracts;

option java_multiple_files = true;

message PollingPayloadData {
  Type type = 1;
  string connectorRef = 2;
  oneof Payload {
    HttpHelmPayload httpHelmPayload = 3;
    EcrPayload ecrPayload = 4;
    GcsHelmPayload gcsHelmPayload = 5;
    S3HelmPayload s3HelmPayload = 6;
    DockerHubPayload dockerHubPayload = 7;
    GcrPayload gcrPayload = 8;
    Nexus3RegistryPayload nexus3RegistryPayload = 9;
    ArtifactoryRegistryPayload artifactoryRegistryPayload = 10;
    AcrPayload acrPayload = 11;
    AmazonS3Payload amazonS3Payload = 12;
    JenkinsPayload jenkinsPayload = 13;
    GitPollingPayload gitPollPayload = 14;
    GARPayload garPayload = 15;
    GithubPackagesPollingPayload githubPackagesPollingPayload = 16;
    CustomPayload customPayload = 17;
    NGVariable ngVariable = 18;
    AzureArtifactsPayload azureArtifactsPayload = 19;
    AMIPayload amiPayload = 20;
    AMITagPayload amiTagPayload = 21;
    AMIFilterPayload amiFilterPayload = 22;
    Nexus2RegistryPayload nexus2RegistryPayload = 23;
  }
}

enum Type {
  UNDEFINED = 0;
  HTTP_HELM = 1;
  ECR = 2;
  GCS_HELM = 3;
  S3_HELM = 4;
  DOCKER_HUB = 5;
  GCR = 6;
  NEXUS3 = 7;
  ARTIFACTORY = 8;
  ACR = 9;
  AMAZON_S3 = 10;
  JENKINS = 11;
  GIT_POLL = 12;
  GOOGLE_ARTIFACT_REGISTRY = 13;
  GITHUB_PACKAGES = 14;
  CUSTOM_ARTIFACT = 15;
  AZURE_ARTIFACTS = 16;
  AMI = 17;
  NEXUS2 = 18;
}

message HttpHelmPayload {
  string chartName = 1;
  HelmVersion helmVersion = 2;
}

message EcrPayload {
  string imagePath = 1;
  string region = 2;
}

message GcsHelmPayload {
  string chartName = 1;
  string bucketName = 2;
  HelmVersion helmVersion = 3;
  string folderPath = 5;
}

message S3HelmPayload {
  string chartName = 1;
  string bucketName = 2;
  string region = 3;
  HelmVersion helmVersion = 4;
  string folderPath = 5;
}

enum HelmVersion {
  V2 = 0;
  V3 = 1;
  V380 = 2;
}

message DockerHubPayload {
  string imagePath = 1;
}

message GcrPayload {
  string imagePath = 1;
  string registryHostname = 2;
}

message Nexus3RegistryPayload {
  string repository = 1;
  string artifactPath = 2;
  string repositoryFormat = 3;
  string artifactId = 4;
  string groupId = 5;
  string packageName = 6;
  string repositoryUrl = 7;
  string classifier = 8;
  string extension = 9;
  string repositoryPort = 10;
  string group = 11;
}

message Nexus2RegistryPayload {
  string repository = 1;
  string repositoryFormat = 3;
  string artifactId = 4;
  string groupId = 5;
  string packageName = 6;
  string classifier = 8;
  string extension = 9;
}

message ArtifactoryRegistryPayload {
  string repository = 1;
  string artifactDirectory = 2;
  string repositoryFormat = 3;
  string artifactPath = 4;
  string repositoryUrl = 5;
}

message AcrPayload {
  string subscriptionId = 1;
  string registry = 2;
  string repository = 3;
}

message AmazonS3Payload {
  string bucketName = 1;
  string filePathRegex = 2;
  string region = 3;
}

message JenkinsPayload {
  string jobName = 1;
  string artifactPath = 2;
}

message GitPollingPayload {
  string eventType = 1;
  string webhookId = 2;
  int32 pollInterval = 3;
}

message CustomPayload {
  string script = 1;
  string artifactsArrayPath = 2;
  string versionPath = 3;
  repeated NGVariable ngVariable = 4;
}

message NGVariable {
  string name = 1;
  string type = 2;
  string value = 3;
}
message GARPayload {
  string region = 1;
  string project = 2;
  string repositoryName = 3;
  string pkg = 4;
}

message GithubPackagesPollingPayload {
  string org = 1;
  string packageName = 2;
  string packageType = 3;
}

message AzureArtifactsPayload {
  string project = 1;
  string feed = 2;
  string packageName = 3;
  string packageType = 4;
  string versionRegex = 5;
  string version = 6;
}
message AMIPayload {
  string region = 1;
  string versionRegex = 2;
  string version = 3;
  repeated AMITagPayload tags = 4;
  repeated AMIFilterPayload filters = 5;
}

message AMITagPayload {
  string name = 1;
  string value = 2;
}

message AMIFilterPayload {
  string name = 1;
  string value = 2;
}
