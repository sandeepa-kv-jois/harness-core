logging:
  level: INFO
  loggers:
    org.glassfish.jersey: WARN
    allbegray.slack: WARN
    org.glassfish.jersey.server.ServerRuntime.Responder: "OFF"
  appenders:
    - type: console
      threshold: TRACE
      target: STDOUT
      logFormat: "%date{ISO8601} %green([%thread]) %highlight(%-5level) %cyan(%logger) - %msg %yellow(%replace(%mdc){'(.+)', '[$1]'}) %n"
    - type: gke-console
      threshold: TRACE
      target: STDOUT
      stackdriverLogEnabled: false

server:
  applicationConnectors:
    - type: http
      port: 14552
      maxRequestHeaderSize: 100KiB
  adminConnectors:
    - type: http
      port: 13002
  requestLog:
    appenders: []
  maxThreads: 1024


debeziumConfigs:
  - isEnabled: true
    name: ${DEBEZIUM_NAME:-pipeline} # unique for each debezium config
    key.converter.schemas.enable: ${KEY_CONVERTER_SCHEMAS_ENABLE:-false}
    value.converter.schemas.enable: ${VALUE_CONVERTER_SCHEMAS_ENABLE:-false}
    offset.flush.interval.ms: ${OFFSET_FLUSH_INTERVAL_MS:-5000}
    mongodb.name: ${MONGODB_NAME:-pmsMongo} # unique for each debezium config
    mongodb.ssl.enabled: ${MONGO_DB_SSL_ENABLED:-false}
    connector.class: ${CONNECTOR_CLASS:-io.debezium.connector.mongodb.MongoDbConnector}
    database.include.list: ${DATABASE_INCLUDE_LIST:-pms-harness}
    collection.include.list: ${COLLECTION_INCLUDE_LIST:-pms-harness.planExecutionsSummary}
    connect.backoff.initial.delay.ms: ${CONNECT_BACKOFF_INITIAL_DELAY_MS:-1000}
    connect.backoff.max.delay.ms: ${CONNECT_BACKOFF_MAX_DELAY_MS:-10000}
    connect.max.attempts: ${CONNECT_MAX_ATTEMPTS:-3}
    snapshot.fetch.size: ${SNAPSHOT_FETCH_SIZE:-2000}
    sleepInterval: ${SLEEP_INTERVAL:-0}
    producingCountPerBatch: ${PRODUCING_COUNT_PER_BATCH:-1000}
    redisStreamSize: ${REDIS_STREAM_SIZE:-10000}
    snapshot.mode: ${SNAPSHOT_MODE:-never}
    transforms.unwrap.array.encoding: ${TRANSFORMS_UNWRAP_ARRAY_ENCODING:-document}
    max.queue.size: ${MAX_QUEUE_SIZE:-8192}
    max.batch.size: ${MAX_BATCH_SIZE:-2048}
    max.queue.size.in.bytes: ${MAX_QUEUE_SIZE_IN_BYTES:-1000000000}
    poll.interval.ms: ${POLL_INTERVAL_MS:-3000}
    field.exclude.list: ${FIELD_EXCLUDE_LIST:-pms-harness.planExecutionsSummary.layoutNodeMap}
    heartbeat.interval.ms: ${HEARTBEAT_INTERVAL_MS:-10000}
    mongodb.connection.string: ${MONGODB_CONNECTION_STRING:-mongodb://localhost:27017}

eventsFramework:
  redis:
    sentinel: false
    masterName: "test"
    redisUrl: "redis://localhost:6379"
    sentinelUrls:
      - "redis://redis1:26379"
      - "redis://redis2:26379"
      - "redis://redis3:26379"
    envNamespace: ""
    readMode: MASTER
    nettyThreads: 16
    useScriptCache: true
    userName: ""
    password: ""
    sslConfig:
      enabled: false
      CATrustStorePath: "/tmp/ca_trust_store"
      CATrustStorePassword: ""

redisLockConfig:
  sentinel: false
  masterName: "test"
  redisUrl: "redis://localhost:6379"
  sentinelUrls:
    - "redis://redis1:26379"
    - "redis://redis2:26379"
    - "redis://redis3:26379"
  envNamespace: ""
  readMode: MASTER
  nettyThreads: 16
  useScriptCache: true
  userName: ""
  password: ""

distributedLockImplementation: REDIS

cfClientConfig:
  apiKey: ""
  configUrl: "https://config.feature-flags.uat.harness.io/api/1.0"
  eventUrl: "https://event.feature-flags.uat.harness.io/api/1.0"
  analyticsEnabled: true
  connectionTimeout: 10000
  readTimeout: 45000
  bufferSize: 10240
  retries: 6
  sleepInterval: 5000

featureFlagConfig:
  featureFlagSystem: LOCAL
  syncFeaturesToCF: false