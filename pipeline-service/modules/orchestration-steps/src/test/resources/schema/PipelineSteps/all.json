{
  "type": "object",
  "discriminator": "type",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "AddRuleYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/AddRuleYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "AddRule"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AddRuleYamlSpec": {
      "type": "object",
      "properties": {
        "clauses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Clause"
          }
        },
        "distribution": {
          "$ref": "#/definitions/DistributionYamlSpec"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "serve": {
          "$ref": "#/definitions/Serve"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AddSegmentToVariationTargetMapYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/AddSegmentToVariationTargetMapYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "AddSegmentToVariationTargetMap"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AddSegmentToVariationTargetMapYamlSpec": {
      "type": "object",
      "required": [
        "segments",
        "variation"
      ],
      "properties": {
        "segments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AddTargetsToVariationTargetMapYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/AddTargetsToVariationTargetMapYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "AddTargetsToVariationTargetMap"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AddTargetsToVariationTargetMapYamlSpec": {
      "type": "object",
      "required": [
        "targets",
        "variation"
      ],
      "properties": {
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ApproverInputInfo": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Approvers": {
      "type": "object",
      "required": [
        "disallowPipelineExecutor",
        "minimumCount",
        "userGroups"
      ],
      "properties": {
        "disallowPipelineExecutor": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ]
        },
        "minimumCount": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string"
            }
          ]
        },
        "userGroups": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 2147483647,
              "minItems": 1
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BarrierStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "barrierRef"
          ],
          "properties": {
            "barrierRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Capabilities": {
      "type": "object",
      "properties": {
        "add": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "drop": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Clause": {
      "type": "object",
      "required": [
        "attribute",
        "id",
        "negate",
        "op",
        "values"
      ],
      "properties": {
        "attribute": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "negate": {
          "type": "boolean"
        },
        "op": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ClauseYamlSpec": {
      "type": "object",
      "required": [
        "op",
        "values"
      ],
      "properties": {
        "attribute": {
          "type": "string"
        },
        "op": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Condition": {
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "enum": [
            "equals",
            "not equals",
            "in",
            "not in"
          ]
        },
        "value": {
          "type": "string",
          "minLength": 1
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerInfraYamlSpec": {
      "type": "object",
      "required": [
        "connectorRef",
        "namespace"
      ],
      "properties": {
        "annotations": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "automountServiceAccountToken": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "connectorRef": {
          "type": "string"
        },
        "containerSecurityContext": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityContext"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "harnessImageConnectorRef": {
          "type": "string"
        },
        "initTimeout": {
          "type": "string"
        },
        "labels": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "namespace": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "nodeSelector": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "os": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Linux",
                "MacOS",
                "Windows"
              ]
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "priorityClassName": {
          "type": "string"
        },
        "runAsUser": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string"
            }
          ]
        },
        "serviceAccountName": {
          "type": "string"
        },
        "tolerations": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Toleration"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "volumes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerVolume"
              }
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerK8sInfra": {
      "allOf": [
        {
          "$ref": "#/definitions/ContainerStepInfra"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "spec": {
              "$ref": "#/definitions/ContainerInfraYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "KubernetesDirect"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerResource": {
      "type": "object",
      "required": [
        "limits"
      ],
      "properties": {
        "limits": {
          "$ref": "#/definitions/Limits"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "command",
            "infrastructure",
            "resources"
          ],
          "properties": {
            "command": {
              "type": "string"
            },
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "entrypoint": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "image": {
              "type": "string"
            },
            "imagePullPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "infrastructure": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ContainerK8sInfra"
                }
              ]
            },
            "metadata": {
              "type": "string"
            },
            "outputVariables": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OutputNGVariable"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "privileged": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "resources": {
              "$ref": "#/definitions/ContainerResource"
            },
            "retry": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 5
            },
            "runAsUser": {
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "type": "string"
                }
              ]
            },
            "settings": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ParameterFieldMapStringJsonNode"
                },
                {
                  "type": "string"
                }
              ]
            },
            "shell": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Sh",
                    "Bash",
                    "Powershell",
                    "Pwsh"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "uses": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerStepInfra": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "KubernetesDirect"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ContainerVolume": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "EmptyDir",
            "PersistentVolumeClaim",
            "HostPath"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CriteriaSpec": {
      "type": "object",
      "discriminator": "type",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CriteriaSpecWrapper": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Jexl",
            "KeyValues"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Jexl"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/JexlCriteriaSpec"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "KeyValues"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KeyValuesCriteriaSpec"
              }
            }
          }
        }
      ]
    },
    "CustomApprovalStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "approvalCriteria",
            "retryInterval",
            "scriptTimeout",
            "shell",
            "source"
          ],
          "properties": {
            "approvalCriteria": {
              "$ref": "#/definitions/CriteriaSpecWrapper"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "environmentVariables": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/NumberNGVariable"
                  },
                  {
                    "$ref": "#/definitions/SecretNGVariable"
                  },
                  {
                    "$ref": "#/definitions/StringNGVariable"
                  }
                ]
              }
            },
            "outputVariables": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/NumberNGVariable"
                  },
                  {
                    "$ref": "#/definitions/SecretNGVariable"
                  },
                  {
                    "$ref": "#/definitions/StringNGVariable"
                  }
                ]
              }
            },
            "rejectionCriteria": {
              "$ref": "#/definitions/CriteriaSpecWrapper"
            },
            "retryInterval": {
              "type": "string",
              "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*)|(^$))$"
            },
            "scriptTimeout": {
              "type": "string",
              "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*)|(^$))$"
            },
            "shell": {
              "type": "string",
              "enum": [
                "Bash",
                "PowerShell"
              ]
            },
            "source": {
              "$ref": "#/definitions/ShellScriptSourceWrapper"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CustomPolicyStepSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicySpec"
        },
        {
          "type": "object",
          "required": [
            "payload"
          ],
          "properties": {
            "payload": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Distribution": {
      "type": "object",
      "required": [
        "bucketBy",
        "variations"
      ],
      "properties": {
        "bucketBy": {
          "type": "string"
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeightedVariation"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DistributionYamlSpec": {
      "type": "object",
      "required": [
        "bucketBy"
      ],
      "properties": {
        "bucketBy": {
          "type": "string"
        },
        "clauses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClauseYamlSpec"
          }
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariationYamlSpec"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "EmailStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "subject",
            "to"
          ],
          "properties": {
            "body": {
              "type": "string"
            },
            "cc": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "subject": {
              "type": "string"
            },
            "to": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "EmptyDirYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/ContainerVolume"
        },
        {
          "type": "object",
          "required": [
            "mountPath",
            "spec",
            "type"
          ],
          "properties": {
            "mountPath": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/EmptyDirYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "EmptyDir",
                "PersistentVolumeClaim",
                "HostPath"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "EmptyDirYamlSpec": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "pattern": "^(([0-9]*[.])?[0-9]+)([GM]i?)|<\\+input>$"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ExecutionTarget": {
      "type": "object",
      "properties": {
        "connectorRef": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "workingDirectory": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "FlagConfigurationStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "environment",
            "feature",
            "instructions"
          ],
          "properties": {
            "environment": {
              "type": "string"
            },
            "feature": {
              "type": "string"
            },
            "instructions": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatchInstruction"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HarnessApprovalStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "approvers",
            "includePipelineExecutionHistory"
          ],
          "properties": {
            "approvalMessage": {
              "type": "string",
              "minLength": 1
            },
            "approverInputs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApproverInputInfo"
              }
            },
            "approvers": {
              "$ref": "#/definitions/Approvers"
            },
            "includePipelineExecutionHistory": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HarnessFileStoreSource": {
      "allOf": [
        {
          "$ref": "#/definitions/ShellScriptBaseSource"
        },
        {
          "type": "object",
          "properties": {
            "file": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HostPathYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/ContainerVolume"
        },
        {
          "type": "object",
          "required": [
            "mountPath",
            "spec",
            "type"
          ],
          "properties": {
            "mountPath": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/HostPathYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "EmptyDir",
                "PersistentVolumeClaim",
                "HostPath"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HostPathYamlSpec": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HttpHeaderConfig": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HttpStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "method",
            "url"
          ],
          "properties": {
            "assertion": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "headers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HttpHeaderConfig"
              }
            },
            "method": {
              "type": "string"
            },
            "outputVariables": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/NumberNGVariable"
                  },
                  {
                    "$ref": "#/definitions/SecretNGVariable"
                  },
                  {
                    "$ref": "#/definitions/StringNGVariable"
                  }
                ]
              }
            },
            "requestBody": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ImportDataSpec": {
      "type": "object",
      "discriminator": "type",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ImportDataSpecWrapper": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Json",
            "KeyValues"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Json"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/JsonImportDataSpec"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "KeyValues"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KeyValuesImportDataSpec"
              }
            }
          }
        }
      ]
    },
    "InputSetValidator": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "string"
        },
        "validatorType": {
          "type": "string",
          "enum": [
            "ALLOWED_VALUES",
            "REGEX"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JexlCriteriaSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/CriteriaSpec"
        },
        {
          "type": "object",
          "required": [
            "expression"
          ],
          "properties": {
            "expression": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JiraApprovalStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "approvalCriteria",
            "connectorRef",
            "issueKey"
          ],
          "properties": {
            "approvalCriteria": {
              "$ref": "#/definitions/CriteriaSpecWrapper"
            },
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "issueKey": {
              "type": "string"
            },
            "issueType": {
              "type": "string"
            },
            "projectKey": {
              "type": "string"
            },
            "rejectionCriteria": {
              "$ref": "#/definitions/CriteriaSpecWrapper"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JiraCreateStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "issueType",
            "projectKey"
          ],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JiraField"
              }
            },
            "issueType": {
              "type": "string"
            },
            "projectKey": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JiraField": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "value": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JiraUpdateStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "issueKey"
          ],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JiraField"
              }
            },
            "issueKey": {
              "type": "string"
            },
            "transitionTo": {
              "$ref": "#/definitions/TransitionTo"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JsonImportDataSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/ImportDataSpec"
        },
        {
          "type": "object",
          "required": [
            "jsonBody"
          ],
          "properties": {
            "jsonBody": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JsonNode": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KeyValuesCriteriaSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/CriteriaSpec"
        },
        {
          "type": "object",
          "required": [
            "conditions"
          ],
          "properties": {
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Condition"
              }
            },
            "matchAnyCondition": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KeyValuesImportDataSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/ImportDataSpec"
        },
        {
          "type": "object",
          "required": [
            "fields"
          ],
          "properties": {
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceNowField"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Limits": {
      "type": "object",
      "properties": {
        "cpu": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        },
        "memory": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NGVariable": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "description": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "String",
            "Number",
            "Secret"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NumberNGVariable": {
      "allOf": [
        {
          "$ref": "#/definitions/NGVariable"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "default": {
              "type": "number",
              "format": "double"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_\\.$]{0,63}$"
            },
            "type": {
              "type": "string",
              "enum": [
                "Number"
              ]
            },
            "value": {
              "oneOf": [
                {
                  "type": "number",
                  "format": "double"
                },
                {
                  "type": "string",
                  "pattern": "((^[+-]?[0-9]*\\.?[0-9]+$)|(<\\+.+>.*))"
                }
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "OutputNGVariable": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z_][0-9a-zA-Z_]{0,63}$"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PMSStepInfo": {
      "type": "object",
      "discriminator": "type",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterField": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "object"
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "object"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ParameterFieldMapStringJsonNode": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JsonNode"
          }
        },
        "executionInput": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        },
        "expressionValue": {
          "type": "string"
        },
        "inputSetValidator": {
          "$ref": "#/definitions/InputSetValidator"
        },
        "jsonResponseField": {
          "type": "boolean"
        },
        "responseField": {
          "type": "string"
        },
        "typeString": {
          "type": "boolean"
        },
        "value": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JsonNode"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PatchInstruction": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SetFeatureFlagState",
            "SetOnVariation",
            "SetOffVariation",
            "SetDefaultVariations",
            "AddRule",
            "UpdateRule",
            "AddTargetsToVariationTargetMap",
            "RemoveTargetsToVariationTargetMap",
            "AddSegmentToVariationTargetMap",
            "RemoveSegmentsToVariationTargetMap"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PersistentVolumeClaimYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/ContainerVolume"
        },
        {
          "type": "object",
          "required": [
            "mountPath",
            "spec",
            "type"
          ],
          "properties": {
            "mountPath": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/PersistentVolumeClaimYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "EmptyDir",
                "PersistentVolumeClaim",
                "HostPath"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PersistentVolumeClaimYamlSpec": {
      "type": "object",
      "required": [
        "claimName"
      ],
      "properties": {
        "claimName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PolicySpec": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "PolicyStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "policySets"
          ],
          "properties": {
            "metadata": {
              "type": "string"
            },
            "policySets": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "type": {
              "type": "string"
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Custom"
              }
            }
          },
          "then": {
            "properties": {
              "policySpec": {
                "$ref": "#/definitions/CustomPolicyStepSpec"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "QueueStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "key",
            "scope"
          ],
          "properties": {
            "key": {
              "type": "string"
            },
            "scope": {
              "type": "string",
              "enum": [
                "Pipeline",
                "Stage"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RemoveSegmentToVariationTargetMapYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/RemoveSegmentToVariationTargetMapYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "RemoveSegmentToVariationTargetMap"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RemoveSegmentToVariationTargetMapYamlSpec": {
      "type": "object",
      "required": [
        "segments",
        "variation"
      ],
      "properties": {
        "segments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RemoveTargetsToVariationTargetMapYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/RemoveTargetsToVariationTargetMapYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "RemoveTargetsToVariationTargetMap"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "RemoveTargetsToVariationTargetMapYamlSpec": {
      "type": "object",
      "required": [
        "targets",
        "variation"
      ],
      "properties": {
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SecretNGVariable": {
      "allOf": [
        {
          "$ref": "#/definitions/NGVariable"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "default": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_\\.$]{0,63}$"
            },
            "type": {
              "type": "string",
              "enum": [
                "Secret"
              ]
            },
            "value": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SecurityContext": {
      "type": "object",
      "properties": {
        "allowPrivilegeEscalation": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "capabilities": {
          "$ref": "#/definitions/Capabilities"
        },
        "privileged": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "procMount": {
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "runAsGroup": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "runAsNonRoot": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
              "minLength": 1
            }
          ]
        },
        "runAsUser": {
          "oneOf": [
            {
              "type": "integer",
              "format": "int32"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Serve": {
      "type": "object",
      "properties": {
        "distribution": {
          "$ref": "#/definitions/Distribution"
        },
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ServiceNowApprovalStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "approvalCriteria",
            "connectorRef",
            "ticketNumber",
            "ticketType"
          ],
          "properties": {
            "approvalCriteria": {
              "$ref": "#/definitions/CriteriaSpecWrapper"
            },
            "changeWindow": {
              "$ref": "#/definitions/ServiceNowChangeWindowSpec"
            },
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "rejectionCriteria": {
              "$ref": "#/definitions/CriteriaSpecWrapper"
            },
            "ticketNumber": {
              "type": "string"
            },
            "ticketType": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ServiceNowChangeWindowSpec": {
      "type": "object",
      "required": [
        "endField",
        "startField"
      ],
      "properties": {
        "endField": {
          "type": "string"
        },
        "startField": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ServiceNowCreateStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "ticketType",
            "useServiceNowTemplate"
          ],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceNowField"
              }
            },
            "templateName": {
              "type": "string"
            },
            "ticketType": {
              "type": "string"
            },
            "useServiceNowTemplate": {
              "type": "boolean"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ServiceNowField": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ServiceNowImportSetStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "importData",
            "stagingTableName"
          ],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "importData": {
              "$ref": "#/definitions/ImportDataSpecWrapper"
            },
            "stagingTableName": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ServiceNowUpdateStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "connectorRef",
            "ticketNumber",
            "ticketType",
            "useServiceNowTemplate"
          ],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceNowField"
              }
            },
            "templateName": {
              "type": "string"
            },
            "ticketNumber": {
              "type": "string"
            },
            "ticketType": {
              "type": "string"
            },
            "useServiceNowTemplate": {
              "type": "boolean"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetDefaultVariationsYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/SetDefaultVariationsYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "SetDefaultVariations"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetDefaultVariationsYamlSpec": {
      "type": "object",
      "required": [
        "off",
        "on"
      ],
      "properties": {
        "off": {
          "type": "string"
        },
        "on": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetFeatureFlagStateYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/SetFeatureFlagStateYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "SetFeatureFlagState"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetFeatureFlagStateYamlSpec": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetOffVariationYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/SetOffVariationYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "SetOffVariation"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetOffVariationYamlSpec": {
      "type": "object",
      "required": [
        "variation"
      ],
      "properties": {
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetOnVariationYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/SetOnVariationYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "SetOnVariation"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SetOnVariationYamlSpec": {
      "type": "object",
      "required": [
        "variation"
      ],
      "properties": {
        "variation": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ShellScriptBaseSource": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ShellScriptInlineSource": {
      "allOf": [
        {
          "$ref": "#/definitions/ShellScriptBaseSource"
        },
        {
          "type": "object",
          "properties": {
            "script": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ShellScriptSourceWrapper": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Harness"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/HarnessFileStoreSource"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Inline"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ShellScriptInlineSource"
              }
            }
          }
        }
      ]
    },
    "ShellScriptStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "required": [
            "onDelegate",
            "shell",
            "source"
          ],
          "properties": {
            "delegateSelectors": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength": 1
                }
              ]
            },
            "environmentVariables": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/NumberNGVariable"
                  },
                  {
                    "$ref": "#/definitions/SecretNGVariable"
                  },
                  {
                    "$ref": "#/definitions/StringNGVariable"
                  }
                ]
              }
            },
            "executionTarget": {
              "$ref": "#/definitions/ExecutionTarget"
            },
            "metadata": {
              "type": "string"
            },
            "onDelegate": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "outputVariables": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/NumberNGVariable"
                  },
                  {
                    "$ref": "#/definitions/SecretNGVariable"
                  },
                  {
                    "$ref": "#/definitions/StringNGVariable"
                  }
                ]
              }
            },
            "shell": {
              "type": "string",
              "enum": [
                "Bash",
                "PowerShell"
              ]
            },
            "source": {
              "$ref": "#/definitions/ShellScriptSourceWrapper"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "StringNGVariable": {
      "allOf": [
        {
          "$ref": "#/definitions/NGVariable"
        },
        {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "default": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][0-9a-zA-Z_\\.$]{0,63}$"
            },
            "type": {
              "type": "string",
              "enum": [
                "String"
              ]
            },
            "value": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Toleration": {
      "type": "object",
      "properties": {
        "effect": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "tolerationSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "TransitionTo": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string"
        },
        "transitionName": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UpdateRuleYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchInstruction"
        },
        {
          "type": "object",
          "required": [
            "identifier",
            "spec",
            "type"
          ],
          "properties": {
            "identifier": {
              "type": "string"
            },
            "spec": {
              "$ref": "#/definitions/UpdateRuleYamlSpec"
            },
            "type": {
              "type": "string",
              "enum": [
                "UpdateRule"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "UpdateRuleYamlSpec": {
      "type": "object",
      "required": [
        "bucketBy",
        "ruleID"
      ],
      "properties": {
        "bucketBy": {
          "type": "string"
        },
        "ruleID": {
          "type": "string"
        },
        "serve": {
          "$ref": "#/definitions/Serve"
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariationYamlSpec"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VariationYamlSpec": {
      "type": "object",
      "required": [
        "variation",
        "weight"
      ],
      "properties": {
        "variation": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WaitStepInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/PMSStepInfo"
        },
        {
          "type": "object",
          "properties": {
            "duration": {
              "type": "string",
              "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*)|(^$))$"
            },
            "metadata": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "WeightedVariation": {
      "type": "object",
      "required": [
        "variation",
        "weight"
      ],
      "properties": {
        "variation": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  }
}