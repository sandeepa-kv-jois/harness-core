Var jobsUrl = concat(Env:baseUrl, "services/search/jobs/?output_mode=json&exec_mode=blocking")
Var bodyMap = {}
Var hostQuery = concat("search ", Env:hostCollectionQuery)
Var:bodyMap.put("search", Var:hostQuery)
Var:bodyMap.put("earliest_time", Env:startTimeSeconds)
Var:bodyMap.put("latest_time", Env:endTimeSeconds)
Var job = sync-call(url=Var:jobsUrl, header=Env:commonHeaders, body=Var:bodyMap, bodyType=FORM_URL_ENCODED)
Var jobId = extract(Var:job,$.sid)
sleep(500)
Var resultsUrl = concat(Env:baseUrl, "services/search/jobs/", Var:jobId, "/results?output_mode=json&count=", Env:maxCount)
Var rawResults = sync-call-with-code(url=Var:resultsUrl, header=Env:commonHeaders)
Var respCode = Var:rawResults[1]
print Var:respCode
Var httpOk = 200
while Var:respCode not equal to Var:httpOk {
  sleep(1000)
  rawResults = sync-call-with-code(url=Var:resultsUrl, header=Env:commonHeaders)
  respCode = Var:rawResults[1]
  print Var:respCode
}
Var hosts = []
print Var:rawResults
Var resultData = Var:rawResults[0]
print Var:resultData
Var results = extract(Var:resultData,$.results)
print Var:results
Var isEmpty = "True"
foreach t in Var:results {
  isEmpty = "False"
}
print Var:isEmpty
if Var:isEmpty == "False" {
  foreach result in Var:results {
    Var host = extract(Var:result, Env:serviceInstanceIdentifier)
    Var:hosts.append(Var:host)
  }
}

return Var:hosts