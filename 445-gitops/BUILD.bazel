# Copyright 2022 Harness Inc. All rights reserved.
# Use of this source code is governed by the PolyForm Free Trial 1.0.0 license
# that can be found in the licenses directory at the root of this repository, also available at
# https://polyformproject.org/wp-content/uploads/2020/05/PolyForm-Free-Trial-1.0.0.txt.

load("@rules_java//java:defs.bzl", "java_binary")
load("//:tools/bazel/GenTestRules.bzl", "run_tests")
load("//:tools/bazel/macros.bzl", "run_analysis")

HarnessTeam = "GITOPS"

java_library(
    name = "module",
    srcs = glob(["src/main/java/**/*.java"]),
    visibility = ["//visibility:public"],
    deps = [
        "//:lombok",
        "//900-git-sync-sdk:module",
        "//950-ng-project-n-orgs:module",
        "//954-connector-beans:module",
        "//960-yaml-sdk:module",
        "//970-ng-commons:module",
        "//980-commons:module",
        "//999-annotations:module",
        "//clients/access-control/sdk:module",
        "@maven//:com_esotericsoftware_kryo",
        "@maven//:com_fasterxml_jackson_core_jackson_annotations",
        "@maven//:com_fasterxml_jackson_core_jackson_databind",
        "@maven//:com_fasterxml_jackson_dataformat_jackson_dataformat_yaml",
        "@maven//:com_google_code_findbugs_annotations",
        "@maven//:com_google_guava_guava",
        "@maven//:com_google_inject_guice",
        "@maven//:com_google_protobuf_protobuf_java_util",
        "@maven//:io_grpc_grpc_api",
        "@maven//:io_swagger_swagger_annotations",
        "@maven//:javax_validation_validation_api",
        "@maven//:javax_ws_rs_javax_ws_rs_api",
        "@maven//:org_apache_commons_commons_lang3",
        "@maven//:org_hibernate_validator_hibernate_validator",
        "@maven//:org_jetbrains_annotations",
        "@maven//:org_modelmapper_modelmapper",
        "@maven//:org_mongodb_mongo_java_driver",
        "@maven//:org_mongodb_morphia_morphia",
        "@maven//:org_reflections_reflections",
        "@maven//:org_slf4j_slf4j_api",
        "@maven//:org_springframework_data_spring_data_commons",
        "@maven//:org_springframework_data_spring_data_mongodb",
        "@maven//:org_springframework_spring_beans",
        "@maven//:org_springframework_spring_context",
        "@maven//:org_springframework_spring_core",
        "@maven//:org_springframework_spring_tx",
    ],
)

java_library(
    name = "tests",
    testonly = True,
    srcs = glob(["src/test/**/*.java"]),
    visibility = ["//visibility:public"],
    deps = [
        "module",
        "//:lombok",
        "//960-ng-core-beans:module",
        "//960-persistence:module",
        "//960-persistence:supporter-test",
        "//970-ng-commons:module",
        "//980-commons:module",
        "//990-commons-test:module",
        "//999-annotations:module",
        "@maven//:com_fasterxml_jackson_core_jackson_annotations",
        "@maven//:com_fasterxml_jackson_core_jackson_databind",
        "@maven//:com_google_guava_guava",
        "@maven//:com_google_inject_guice",
        "@maven//:com_squareup_retrofit2_retrofit",
        "@maven//:io_dropwizard_dropwizard_jackson",
        "@maven//:io_swagger_swagger_annotations",
        "@maven//:javax_validation_validation_api",
        "@maven//:javax_ws_rs_javax_ws_rs_api",
        "@maven//:junit_junit",
        "@maven//:org_apache_commons_commons_lang3",
        "@maven//:org_assertj_assertj_core",
        "@maven//:org_hibernate_validator_hibernate_validator",
        "@maven//:org_mockito_mockito_core",
        "@maven//:org_modelmapper_modelmapper",
        "@maven//:org_mongodb_mongo_java_driver",
        "@maven//:org_mongodb_morphia_morphia",
        "@maven//:org_reflections_reflections",
        "@maven//:org_slf4j_slf4j_api",
        "@maven//:org_springframework_data_spring_data_commons",
        "@maven//:org_springframework_data_spring_data_mongodb",
        "@maven//:org_springframework_spring_beans",
        "@maven//:org_springframework_spring_context",
        "@maven//:org_springframework_spring_core",
        "@maven//:org_springframework_spring_tx",
    ],
)

run_tests()

run_analysis()
